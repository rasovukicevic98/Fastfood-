/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.ps.view.form;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import kontroler.Controller;

import rs.ac.bg.fon.ps.domain.Ingredients;
import rs.ac.bg.fon.ps.domain.MeasurementUnit;
import rs.ac.bg.fon.ps.domain.Product;
import rs.ac.bg.fon.ps.domain.RawMaterial;
import rs.ac.bg.fon.ps.domain.Supplier;
import rs.ac.bg.fon.ps.view.components.TableModelIngredients;
import rs.ac.bg.fon.ps.view.components.TableModelRawMaterial;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Raso
 */
public class FrmNewProduct extends javax.swing.JDialog {

    Ingredients ingredient;
    List<Ingredients> ingredients;
    boolean isItFodd=true;
    /**
     * Creates new form FrmNewProduct
     */
    public FrmNewProduct(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        ingredients= new ArrayList<>();
        initComponents();
        
        
        try {
            prepareView();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error in view initialization"+ex.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblMeasurementUnit = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        cmbMeasurementUnit = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblRawMaterial = new javax.swing.JLabel();
        cmbRawMaterial = new javax.swing.JComboBox();
        lblRawMaterial1 = new javax.swing.JLabel();
        lblRawMaterial2 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        cmbMeasurementUnitRawMaterial = new javax.swing.JComboBox();
        jbtnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblIngredients = new javax.swing.JTable();
        jbtnRemove = new javax.swing.JButton();
        btnFood = new javax.swing.JButton();
        btnBeverage = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        txtPrice2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblID.setText("ID:");

        lblName.setText("Name:");

        lblDescription.setText("Description:");

        lblPrice.setText("Price:");

        lblMeasurementUnit.setText("Measurement unit: ");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        cmbMeasurementUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Raw material"));

        lblRawMaterial.setText("Raw material");

        lblRawMaterial1.setText("Quantity:");

        lblRawMaterial2.setText("Measurement unit:");

        jbtnAdd.setText("Add");
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });

        jtblIngredients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtblIngredients);

        jbtnRemove.setText("Remove");
        jbtnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblRawMaterial2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(cmbMeasurementUnitRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRawMaterial)
                            .addComponent(lblRawMaterial1))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbRawMaterial, 0, 206, Short.MAX_VALUE)
                            .addComponent(txtQuantity))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnAdd)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnRemove)
                        .addGap(25, 25, 25))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 180, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRawMaterial)
                    .addComponent(cmbRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRawMaterial1)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRawMaterial2)
                            .addComponent(cmbMeasurementUnitRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnAdd))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jbtnRemove)))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        btnFood.setText("Food");
        btnFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFoodActionPerformed(evt);
            }
        });

        btnBeverage.setText("Beverage");
        btnBeverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeverageActionPerformed(evt);
            }
        });

        jLabel1.setText("Amount:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescription)
                                    .addComponent(lblName))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBeverage)
                                .addGap(18, 18, 18)
                                .addComponent(btnFood)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPrice)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMeasurementUnit)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMeasurementUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 378, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID)
                            .addComponent(btnFood)
                            .addComponent(btnBeverage))
                        .addGap(113, 113, 113)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lblName)
                                .addGap(30, 30, 30)
                                .addComponent(lblDescription))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrice)
                    .addComponent(txtPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMeasurementUnit)
                    .addComponent(cmbMeasurementUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed
        
        
        try {
            validateForm();
            TableModelIngredients ingredientsModel = (TableModelIngredients)jtblIngredients.getModel();

        
        Ingredients ingredient = new Ingredients();
        RawMaterial rawMaterial = (RawMaterial)cmbRawMaterial.getSelectedItem();
       // ingredient.setProductID(Long.parseLong(txtID.getText().trim()));
       
        ingredient.setRawMaterialID(rawMaterial.getId());
        double doubleBrojr = Double.parseDouble(txtQuantity.getText().trim());
        
        ingredient.setQuantity(BigDecimal.valueOf(doubleBrojr));
        ingredient.setMeasurementUnit((MeasurementUnit)cmbMeasurementUnitRawMaterial.getSelectedItem());
        
            
        
       // ingredients.add(ingredient);
        ingredientsModel.addIngredient(ingredient);
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
       
        
    }//GEN-LAST:event_jbtnAddActionPerformed

    private void jbtnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveActionPerformed
int selected=jtblIngredients.getSelectedRow();
        if(selected==-1){
            JOptionPane.showMessageDialog(this, "No row selected", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            TableModelIngredients tm=(TableModelIngredients)jtblIngredients.getModel();
            tm.removeIngredient(selected);
        }    }//GEN-LAST:event_jbtnRemoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       if(isItFodd){
        List<Product> products;
//
//        System.out.println(product.getSavedByUser().getUsername());
//        System.out.println(product.getSavedByUser());
        Ingredients ingredients2 = new Ingredients();
        TableModelIngredients tm=(TableModelIngredients)jtblIngredients.getModel();
        List<Ingredients> ingredients=tm.getIngredients();
        Long ID = null;
        try {
            validateForm();
            BigDecimal amount = BigDecimal.valueOf(Double.valueOf(txtAmount.getText().trim()));
                    Product product = new Product(Long.parseLong("122"), txtName.getText().trim(), txtDescription.getText().trim(),BigDecimal.valueOf(Double.valueOf(txtPrice2.getText().trim())),
                            (MeasurementUnit)cmbMeasurementUnit.getSelectedItem(), Controller.getInstance().getUlogovaniUser(),amount);
                    product.setIsItFood(isItFodd);
            products = Controller.getInstance().getAllProducts();
            for (Product product1  : products) {
                if(product1.getName().equals(product.getName())) {
                    throw new Exception("Proizvod sa tim imenom vec posotji");
                }else{
                  
                }
                    
                
            
            }
              JOptionPane.showMessageDialog(this, "Ime je ok");
              product.setIngredients(ingredients);
            ServerskiOdgovor so = Controller.getInstance().addProductAndIngredients(product);
            if(so.isUspjesno()){
                JOptionPane.showMessageDialog(this, "Product je usojeso dodat");
                ID = (Long) so.getObject();
                int response = JOptionPane.showConfirmDialog(this, "Do you want to continue?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(response == JOptionPane.YES_OPTION){
                    
                    txtAmount.setText("");
                    txtDescription.setText("");
                    txtID.setText("");
                    txtName.setText("");
                    txtPrice2.setText("");
                    
                }else{
                    this.dispose();
                }
                
            }else{
                throw new Exception("Neuspjesno dodat product");
            }
//            products = Controller.getInstance().getAllProducts();
//            for (Product product1  : products) {
//                if(product1.getName().equals(product.getName())) ID=product1.getId();
//                    }
//            for (Ingredients ingredient1 : ingredients) {
//            ingredient1.setProductID(ID);
//            }
//        
//             so = Controller.getInstance().addAllIngredients(ingredients);
//            if(so.isUspjesno()){
//                JOptionPane.showMessageDialog(this, "Sastojci I uspjeso dodati");
//                
//            }else{
//                JOptionPane.showMessageDialog(this, "Neuspjesno dodati ");
//           }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
            
      
        } 
        
       }else{
           
           
           List<Product> products;

        //Ingredients ingredients2 = new Ingredients();
        //TableModelIngredients tm=(TableModelIngredients)jtblIngredients.getModel();
       // List<Ingredients> ingredients=tm.getIngredients();
        Long ID = null;
        try {
            validateFormBeverage();
            
            
            String name = txtName.getText().trim();
           BigDecimal price = BigDecimal.valueOf(Double.valueOf(txtPrice2.getText().trim()));
           String description = txtDescription.getText().trim();
           MeasurementUnit unit = (MeasurementUnit) cmbMeasurementUnit.getSelectedItem();
           BigDecimal amount = BigDecimal.valueOf(Double.valueOf(txtAmount.getText().trim()));
           Product product = new Product();
           product.setName(name);
           product.setMeasurementUnit(unit);
           product.setPrice(price);
           product.setSavedByUser(Controller.getInstance().getUlogovaniUser());
           product.setDescription(description);
           product.setAmount(amount);
            products = Controller.getInstance().getAllProducts();
            for (Product product1  : products) {
                if(product1.getName().equals(product.getName())) {
                    throw new Exception("Proizvod sa tim imenom vec posotji");
                }
                    
                
            
            }
             JOptionPane.showMessageDialog(this, "Ime je ok");
            product.setIsItFood(false);
            ServerskiOdgovor so = Controller.getInstance().addProduct(product);
            if(so.isUspjesno()){
                JOptionPane.showMessageDialog(this, "Product je usojeso dodat");
                ID = (Long) so.getObject();
                int response = JOptionPane.showConfirmDialog(this, "Do you want to continue?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(response == JOptionPane.YES_OPTION){
                    
                    txtAmount.setText("");
                    txtDescription.setText("");
                    txtID.setText("");
                    txtName.setText("");
                    txtPrice2.setText("");
                    
                }else{
                    this.dispose();
                }
                
            }else{
                throw new Exception("Neuspjesno dodat product");
            }
//            products = Controller.getInstance().getAllProducts();
//            for (Product product1  : products) {
//                if(product1.getName().equals(product.getName())) ID=product1.getId();
//                    }
//            for (Ingredients ingredient1 : ingredients) {
//            ingredient1.setProductID(ID);
//            }
//        
//             so = Controller.getInstance().addAllIngredients(ingredients);
//            if(so.isUspjesno()){
//                JOptionPane.showMessageDialog(this, "Sastojci I uspjeso dodati");
//                
//            }else{
//                JOptionPane.showMessageDialog(this, "Neuspjesno dodati ");
//           }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
            
      
        } 
           
           
           
           
           
           
       }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFoodActionPerformed
        btnBeverage.setEnabled(true);
        btnFood.setEnabled(false);
        isItFodd = true;
        jtblIngredients.setEnabled(true);
        jPanel1.setEnabled(true);
        jbtnRemove.setEnabled(true);
        jbtnAdd.setEnabled(true);
        
    }//GEN-LAST:event_btnFoodActionPerformed

    private void btnBeverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeverageActionPerformed
        btnBeverage.setEnabled(false);
        btnFood.setEnabled(true);
        isItFodd=false;
        jtblIngredients.setEnabled(false);
        jPanel1.setEnabled(false);
        jbtnRemove.setEnabled(false);
        jbtnAdd.setEnabled(false);
        
    }//GEN-LAST:event_btnBeverageActionPerformed

    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmNewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmNewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmNewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmNewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmNewProduct dialog = new FrmNewProduct(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBeverage;
    private javax.swing.JButton btnFood;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox cmbMeasurementUnit;
    private javax.swing.JComboBox cmbMeasurementUnitRawMaterial;
    private javax.swing.JComboBox cmbRawMaterial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnRemove;
    private javax.swing.JTable jtblIngredients;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblMeasurementUnit;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblRawMaterial;
    private javax.swing.JLabel lblRawMaterial1;
    private javax.swing.JLabel lblRawMaterial2;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice2;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void prepareView() throws Exception {
        fillCmbMeasurementUnit();
        fillCmbRawMaterial();
        jtblIngredients.setModel(new TableModelIngredients(ingredients));

    }

    private void fillCmbMeasurementUnit() {
         cmbMeasurementUnit.removeAllItems();
         cmbMeasurementUnitRawMaterial.removeAllItems();
        for(MeasurementUnit measurementUnit : MeasurementUnit.values()){
            cmbMeasurementUnit.addItem(measurementUnit);
            cmbMeasurementUnitRawMaterial.addItem(measurementUnit);
        }
        
    }

    private void prepareTableIngredients() {
   
    
        jtblIngredients.setModel(new TableModelIngredients(ingredients));
        
                
                

        List<Ingredients> ingredients = new ArrayList<>();
        
        TableModelIngredients tm=new TableModelIngredients(ingredients);
        jtblIngredients.setModel(tm);
        
       
        
        
        
         
    
    
    
    }

    private void fillCmbRawMaterial() throws Exception{

        List<RawMaterial> rawMaterials = new ArrayList<>();
        rawMaterials = Controller.getInstance().getAllRawMaterials();
        
        for(RawMaterial rawMaterial:rawMaterials){
            cmbRawMaterial.addItem(rawMaterial);
            
            
        }
                
        
        
        
    }

    private void validateForm() throws Exception {

        String errorMessage="";
        if(txtID.getText().trim().isEmpty()){
            errorMessage+= "ID cannot be empty.\n";
        }
        if(txtName.getText().trim().isEmpty()){ 
            errorMessage+= "Name cannot be empty.\n";
        }
        if(txtDescription.getText().isEmpty()){
            errorMessage+= "Description cannot be empty.\n";
        }
        if(txtPrice2.getText().isEmpty()){
            errorMessage+= "Price cannot be empty.\n";
        }
        if(isNumeric(txtPrice2.getText().trim())==false){
            errorMessage+= "Price must be numeric.\n";
        }
        if(txtAmount.getText().trim().isEmpty()){
            errorMessage+= "Amount cannot be empty.\n";
        }
        if(isNumeric(txtAmount.getText().trim())==false){
            errorMessage+= "Price must be numeric.\n";
        }
         if(txtQuantity.getText().isEmpty()){
            errorMessage+= "Quantity cannot be empty.\n";
        }
         if(isNumeric(txtQuantity.getText().trim())==false){
            errorMessage+= "Quantity must be numeric.\n";
        }
        if(!errorMessage.isEmpty()){
             throw new Exception(errorMessage);
        }
    }
    
    public boolean isNumeric (String broj){
        for (char c : broj.toCharArray()) {
            if(!Character.isDigit(c)){
                return false;
            }
        }
        return true;
    }

    private void validateFormBeverage() throws Exception {
        String errorMessage="";
        if(txtID.getText().trim().isEmpty()){
            errorMessage+= "ID cannot be empty.\n";
        }
        if(txtName.getText().trim().isEmpty()){ 
            errorMessage+= "Name cannot be empty.\n";
        }
        if(txtDescription.getText().isEmpty()){
            errorMessage+= "Description cannot be empty.\n";
        }
        if(txtPrice2.getText().isEmpty()){
            errorMessage+= "Price cannot be empty.\n";
        }
        if(isNumeric(txtPrice2.getText().trim())==false){
            errorMessage+= "Price must be numeric.\n";
        }
        if(txtAmount.getText().trim().isEmpty()){
            errorMessage+= "Amount cannot be empty.\n";
        }
        if(isNumeric(txtAmount.getText().trim())==false){
            errorMessage+= "Price must be numeric.\n";
        }
        
        if(!errorMessage.isEmpty()){
             throw new Exception(errorMessage);
        }
    }
}
